# Makefile, das einzelne Dateien kompiliert und verlinkt (inkl der root-files)
# Wird eine Datei/Klasse ge�ndert m�ssen die anderen Dateien/Klassen nicht neu kompiliert werden

#    Wahl des Compilers
# CXX = clang++
 CXX = g++

#    DEBUG MODE
#    -Wall setzt (fast) alle Compilerwarnungen
#    -Werror setzt mehr Warnungen
#    -Wextra setzt noch mehr Warnungen
#    -ggdb erg�nzt debuginfos
# CXXFLAGS = -ggdb -Wall -Werror -Wextra -std=c++11 -stdlib=libc++ -I`root-config --incdir`
# use standard:
# CXXFLAGS = -ggdb -Wall -Wextra -I`root-config --incdir` -std=c++11
 CXXFLAGS = -ggdb -Wall -Wextra -I`root-config --incdir`
# use optimization:
# CXXFLAGS = -O3 -Wall -Wextra -I`root-config --incdir`
#    RELEASE MODE
#    -O3 Gr��tm�gliche Optimierung; -O1 und -O2 sind kleinere Optimierungen; -Os optimiert Gr��e; -Og mit Debuginfos
# CXXFLAGS = -march=native -O3 -std=c++11 -I`root-config --incdir`


#    libraries die beim Linken eingesetzt werden
LDFLAGS = `root-config --libs` -lEG

# doesn't seem to work yet (carsten)
OBJDIR=obj
objects = $(addprefix $(OBJDIR)/, main.o LmManager.o LmBackground.o LmSignal.o LmHandler.o LmHelper.o)

#   $@ setzt hier das Namen des Targets ein
#   $^ setzt hier alle Prerequisites ein
#    $< setzt hier Name des ersten Prerequisite ein
#    -o dateiname setzt den Namen der zu erstellenden Datei
#    -c kompiliert aber linkt nicht
ana: ana.exe
carsten: carsten.exe
carsten_sys: carsten_sys.exe
jerome: jerome.exe
patrick: patrick.exe
pat_bg: pat_bg.exe
pat_sys: pat_sys.exe
sebastian: sebastian.exe
theo_pPb: theo_pPb.exe
theo_pp: theo_pp.exe
theo_Misc: theo_Misc.exe
theo: theo.exe


#Beispiel:
#zu_erstellende_datei(target): daf�r_gebrauchte_dateien(prerequisites)
#    g++ -o target -O3 -std=c++11 -I`root-config --incdir` prerequisites `root-config --libs` -lEG

# ana.exe: $(objects)
# 	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)

# $(OBJDIR)/%.o: %.cpp
# 	$(CXX) $(CXXFLAGS) -c -o $@ $<

ana.exe: obj/main.o	            		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
carsten.exe: obj/carsten.o      		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
carsten_sys.exe: obj/carsten_sys.o  obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
jerome.exe: obj/jerome.o        		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
patrick.exe: obj/patrick.o      		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
pat_bg.exe: obj/pat_bg.o        		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
pat_sys.exe: obj/pat_sys.o      		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
sebastian.exe: obj/sebastian.o  		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
theo_pPb.exe: obj/theo_pPb.o    		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
theo_pp.exe: obj/theo_pp.o      		obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
theo_Misc.exe: obj/theo_Misc.o obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
theo.exe: obj/theo.o obj/LmManager.o obj/LmBackground.o obj/LmSignal.o obj/LmHandler.o obj/LmHelper.o obj/LmCocktailMan.o obj/LmCocktailPart.o obj/LmCocktail.o obj/LmBaseSignal.o obj/LmBaseManager.o obj/LmHistogram.o obj/LmFitter.o obj/LmFitFunctions.o obj/LmQA.o obj/LmMultiQA.o obj/LmFileManager.o
	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)

obj/main.o: src/main.cpp src/config.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/carsten.o: src/carsten.cpp src/carsten.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/carsten_sys.o: src/carsten_sys.cpp src/carsten_sys.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/jerome.o: src/jerome.cpp src/jerome.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/patrick.o: src/patrick.cpp src/patrick.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/pat_bg.o: src/pat_bg.cpp src/pat_bg.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/pat_sys.o: src/pat_sys.cpp src/pat_sys.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/sebastian.o: src/sebastian.cpp src/sebastian.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/theo_pPb.o: src/theo_pPb.cpp src/theo_pPb.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/theo_pp.o: src/theo_pp.cpp src/theo_pp.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/theo_Misc.o: src/theo_Misc.cpp src/theo_Misc.h
	$(CXX) $(CXXFLAGS) -c $< -o $@
obj/theo.o: src/theo.cpp src/theo.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmManager.o: src/LmManager.cpp src/LmManager.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmBackground.o: src/LmBackground.cpp src/LmBackground.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmSignal.o: src/LmSignal.cpp src/LmSignal.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmHandler.o: src/LmHandler.cpp src/LmHandler.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmHelper.o: src/LmHelper.cpp src/LmHelper.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmCocktailMan.o: src/LmCocktailMan.cpp src/LmCocktailMan.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmCocktailPart.o: src/LmCocktailPart.cpp src/LmCocktailPart.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmCocktail.o: src/LmCocktail.cpp src/LmCocktail.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmBaseSignal.o: src/LmBaseSignal.cpp src/LmBaseSignal.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmBaseManager.o: src/LmBaseManager.cpp src/LmBaseManager.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmHistogram.o: src/LmHistogram.cpp src/LmHistogram.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmFitter.o: src/LmFitter.cpp src/LmFitter.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmFitFunctions.o: src/LmFitFunctions.cpp src/LmFitFunctions.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmQA.o: src/LmQA.cpp src/LmQA.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmMultiQA.o: src/LmMultiQA.cpp src/LmMultiQA.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

obj/LmFileManager.o: src/LmFileManager.cpp src/LmFileManager.h
	$(CXX) $(CXXFLAGS) -c $< -o $@

#L�schen der einzelnen Objekte
.PHONY: clean cleanpdf cleanest
clean:
	rm obj/*.o
cleanpdf:
	rm *.pdf
cleanest: clean
	rm *.exe
	rm *.pdf
